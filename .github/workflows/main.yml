name: Deploy

on:
  push:
    branches:
      - '**' # This will trigger the workflow on push to any branch

jobs:
  test-and-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.20.3'

      - name: Install dependencies
        run: |
          npm install
          npm run install:frontend
          npm run install:backend

      - name: Create .env file for frontend
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> frontend/.env

      - name: Run frontend tests
        run: npm run test:frontend
        env:
          NODE_ENV: test
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Run backend tests
        run: npm run test:backend
        env:
          NODE_ENV: test

      - name: Build frontend
        run: npm run build:frontend
        env:
          NODE_ENV: production
          VITE_API_URL: ${{ secrets.VITE_API_URL }}

      - name: Build backend
        run: npm run build:backend
        env:
          NODE_ENV: production

  deploy:
    if: github.ref == 'refs/heads/main' # This will trigger the deploy job only on the main branch
    runs-on: ubuntu-latest
    needs: test-and-build

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '18.20.3'

      - name: Set up Fly.io CLI
        uses: superfly/flyctl-actions/setup-flyctl@master

      - name: Create .env file for frontend
        run: |
          echo "VITE_API_URL=${{ secrets.VITE_API_URL }}" >> frontend/.env

      - name: Deploy frontend to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          NODE_ENV: production
        run: npm run deploy:frontend

      - name: Deploy backend to Fly.io
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          NODE_ENV: production
        run: npm run deploy:backend
